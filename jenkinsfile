pipeline {
    agent any

    tools {
        maven 'maven' // Ensure 'maven' is configured under Global Tool Configuration
    }

    environment {
        SONAR_URL = "http://43.205.236.15:9000" // SonarQube server URL
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/master']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/mayurpwr7/spring-boot-war-example.git']]
                )
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL"
                }
            }
        }

        stage('Build Source Code') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                deploy adapters: [
                    tomcat9(
                        credentialsId: 'tomcat10', // Jenkins credentials with Tomcat user/pass
                        path: '',
                        url: 'http://13.127.212.77:8080'
                    )
                ],
                contextPath: '/app',
                war: '**/*.war'
            }
        }
    }
}

